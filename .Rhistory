dim(lapply(files, read.csv))
rbind(lapply(files, read.csv))
for(i in 1:5) print(i)
for(i in 1:5) print(i)
for(i in files) print(i)
source('C:/Repositories/rprogramming/pollutantmean.R')
x <- 1:332
x
length(x)
paste("00", 1, ".csv")
paste("00", 1, ".csv", sep = "")
filename <- ""
filename2
?new
new(character)
new("character")
c1 <- new()
c1 <- new("character")
class(c1)
className(c1)
new()
?if
?if
?if()
?for
test
?for
next()
filename
c1
c(c1, "test")
c
c(c1, "test")
c1 <- c(c1, "test")
c1
c1 <- c(c1, "test")
c1
dim(c1)
length(c1)
source('C:/Repositories/rprogramming/pollutantmean.R')
pollutantmean(,,1:5)
as.list(pollutantmean(,,1:5))
?data.frame
?new
df <- new("data.frame")
class(df)
df2 <- data.frame()
class(df2)
source('C:/Repositories/rprogramming/pollutantmean.R')
dim(rbind(read.csv(file.path("specdata", "001.csv"), read.csv(file.path("specdata", "002.csv")))))
dim(rbind(read.csv(file.path("specdata", "001.csv")), read.csv(file.path("specdata", "002.csv"))))
pollutantmean(,,1:2)
?subset.data.frame
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
pollutantmean(,,1:2)
pollutantmean(,"sulfate",1:2)
head(pollutantmean(,"sulfate",1:2))
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
head(pollutantmean(,"sulfate",1:2))
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
head(pollutantmean(,"sulfate",1:2))
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
head(pollutantmean(,"sulfate",1:2))
source('C:/Repositories/rprogramming/pollutantmean.R')
pollutantmean(, "sulfate", 1:2)
source('C:/Repositories/rprogramming/pollutantmean.R')
head(pollutantmean(,"sulfate",1:2))
pollutantmean(,"sulfate",1:2)[1]
head(pollutantmean(,"sulfate",1:2)[1])
class(pollutantmean(,"sulfate",1:2)[1])
as.numeric(pollutantmean(,"sulfate",1:2)[1])
source('C:/Repositories/rprogramming/pollutantmean.R')
pollutantmean(,"sulfate",1:2)
source('C:/Repositories/rprogramming/pollutantmean.R')
pollutantmean(,"sulfate",1:2)
pollutantmean(,"sulfate",1)
pollutantmean(,"nitrate",1)
source('C:/Repositories/rprogramming/pollutantmean.R')
pollutantmean(,"nitrate",)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
source('C:/Repositories/rprogramming/pollutantmean.R')
head(read.csv(file.path("specdata", "001.csv")))
?complete.cases
complete.cases(read.csv(file.path("specdata", "001.csv")))
sum(complete.cases(read.csv(file.path("specdata", "001.csv"))))
sum(complete.cases(read.csv(file.path("specdata", "002.csv"))))
head(read.csv(file.path("specdata", "002.csv"))[1])
head(read.csv(file.path("specdata", "002.csv"))[1,1])
head(read.csv(file.path("specdata", "002.csv"))[[1]])
head(read.csv(file.path("specdata", "002.csv"))[[1,1]])
head(read.csv(file.path("specdata", "002.csv"))[1:1,"id")
head(read.csv(file.path("specdata", "002.csv"))[1:1,"id"])
head(read.csv(file.path("specdata", "002.csv"))[1:1,"ID"])
head(read.csv(file.path("specdata", "002.csv"))[1,"ID"])
class(head(read.csv(file.path("specdata", "002.csv"))[1,"ID"]))
?data.frame
?rbind.data.frame
source('C:/Repositories/rprogramming/complete.R')
complete(,1)
?data.frame
?names
source('C:/Repositories/rprogramming/complete.R')
complete(,1)
source('C:/Repositories/rprogramming/complete.R')
source('C:/Repositories/rprogramming/complete.R')
source('C:/Repositories/rprogramming/complete.R')
complete(,1)
complete.cases(read.csv(file.path("specdata", 1))
complete.cases(read.csv(file.path("specdata", "1"))
complete.cases(read.csv(file.path("specdata", "1")))
complete.cases(read.csv(file.path("specdata", "1.csv")))
complete.cases(read.csv(file.path("specdata", "001.csv")))
comp <- complete.cases(read.csv(file.path("specdata", "001.csv")))
sum(comp)
sum(complete.cases(read.csv(file.path("specdata", "001.csv"))))
source('C:/Repositories/rprogramming/complete.R')
complete(,1)
source('C:/Repositories/rprogramming/complete.R')
complete(,1)
complete(,1:2)
complete(,1:2)
complete(,1)
complete(,2)
complete(,2:3)
?rbind.data.frame
source('C:/Repositories/rprogramming/complete.R')
source('C:/Repositories/rprogramming/complete.R')
complete(,1)
complete(,1:2)
complete(,1:3)
source('C:/Repositories/rprogramming/complete.R')
source('C:/Repositories/rprogramming/complete.R')
complete(,1:3)
source('C:/Repositories/rprogramming/complete.R')
source('C:/Repositories/rprogramming/complete.R')
source('C:/Repositories/rprogramming/complete.R')
source('C:/Repositories/rprogramming/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source('C:/Repositories/rprogramming/corr.R')
source('C:/Repositories/rprogramming/corr.R')
source('C:/Repositories/rprogramming/corr.R')
corr()
corr(,450)
source('C:/Repositories/rprogramming/corr.R')
corr(,450)
source('C:/Repositories/rprogramming/corr.R')
corr()
corr(,450)
corr(,400)
class(corr(400))
class(corr(,400))
source('C:/Repositories/rprogramming/corr.R')
class(corr(,400))
corr(,400)
source('C:/Repositories/rprogramming/corr.R')
corr(,400)
source('C:/Repositories/rprogramming/corr.R')
source('C:/Repositories/rprogramming/corr.R')
source('C:/Repositories/rprogramming/corr.R')
?cor
source('C:/Repositories/rprogramming/corr.R')
corr(,400)
head(corr(,400))
source('C:/Repositories/rprogramming/corr.R')
source('C:/Repositories/rprogramming/corr.R')
head(corr(,400))
source('C:/Repositories/rprogramming/corr.R')
head(corr(,150))
source('C:/Repositories/rprogramming/corr.R')
source('C:/Repositories/rprogramming/corr.R')
source('C:/Repositories/rprogramming/corr.R')
head(corr(,150))
source('C:/Repositories/rprogramming/corr.R')
source('C:/Repositories/rprogramming/corr.R')
head(corr(,150))
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr
)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
sumbit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
swirl()
library(swirl)
rm(list=ls())
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4, replace = TRUE)
sample(1:6,4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinorm
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, 1, 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(10, )
rpois(5, 10)
my_pois <- replicate(100, rpoid(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(sys.time())
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d %Y %H:%M")
t4 <- strptime(t3, "%B %d %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = "days")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = cars$speed, y = cars$dist, labels("Speed"))
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, title("My Cars"))
plot(cars, title("My Plot"))
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
mtcars
data(mtcars)
?boxplot
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl and data = mtcars)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
cl
outcomedata <- ""outcome-of-care-measures.csv"
outcomedata <- "outcome-of-care-measures.csv"
outcome <- read.csv(outcomedata, colClasses = "character")
head(outcome)
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[,11])
source('C:/Repositories/rprogramming/best.R')
?best
?read.csv
str(read.csv("outcome-of-care-measures.csv", header = TRUE))
obj <- read.csv("outcome-of-care-measures.csv", header = TRUE)
obj[$State]
obj["State"]
head(obj["State"])
obj2 <- as.numeric(obj["State"])
obj2 <- as.character(obj["State"])
head(obj2)
obj2 <- as.vector(obj["State"])
head(obj2)
class(obj2)
obj2 <- as.vector(obj$State)
class(obj2)
class(obj2)
head(obj2)
obj2
unique(obj2)
length(unique(obj2))
`?stop()
?stop
source('C:/Repositories/rprogramming/best.R', encoding = 'UTF-8')
source('C:/Repositories/rprogramming/best.R', encoding = 'UTF-8')
source('C:/Repositories/rprogramming/best.R', encoding = 'UTF-8')
source('C:/Repositories/rprogramming/best.R', encoding = 'UTF-8')
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
best("tup",)
best("tup", "beef")
source('C:/Repositories/rprogramming/best.R')
best("tup", "beef")
best("TX", "beef")
best("NY", "beef")
source('C:/Repositories/rprogramming/best.R')
best("NY", "beef")
source('C:/Repositories/rprogramming/best.R')
best("NY", "beef")
data <- read.csv("outcome-of-care-measures.csv", header = TRUE)
states <- unique(as.vector(data$state))
states
unique(as.vector(data$state))
data$State
?unique
head(unique(as.vector(data$state)))
length(as.vector(data$state))
as.vector(data$"EuStockMarkets")
as.vector(data$state)
head(read.csv("outcome-of-care-measures.csv", header = TRUE)$state)
head((read.csv("outcome-of-care-measures.csv", header = TRUE))$state)
data <- read.csv("outcome-of-care-measures.csv", header = TRUE)
data <- read.csv("outcome-of-care-measures.csv", header = TRUE)
source('C:/Repositories/rprogramming/best.R')
data <- read.csv("outcome-of-care-measures.csv", header = TRUE)
source('C:/Repositories/rprogramming/best.R')
data <- read.csv("outcome-of-care-measures.csv", header = TRUE)
dsd
test <- c(0,2)
test
data <- read.csv("outcome-of-care-measures.csv", header = TRUE)
data$State
data <- read.csv("outcome-of-care-measures.csv", header = TRUE)
d <- read.csv("outcome-of-care-measures.csv", header = TRUE)
d <- read.csv("outcome-of-care-measures.csv", header = TRUE)
head(d$State)
unique(as.vector(d$State))
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
best("NY", "test")
test <- unique(as.vector(d$State))
class(test)
?match
source('C:/Repositories/rprogramming/best.R')
best("NY", "test")
states <- unique(as.vector(d$state))
states <- unique(d$state)
states <- unique(d$state)
unique(d$state)
states <- as.vector(d$State)
unique(states)
statesu <- unique(states)
source('C:/Repositories/rprogramming/best.R')
best("NY", "test")
best("NY", "heart attack")
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
names(d)
head(subset.data.frame(d, State = state))
state <- "NY"
head(subset.data.frame(d, State = state))
head(subset.data.frame(d, d$State = state))$State
head(subset.data.frame(d, d$State == state))$State
head(subset.data.frame(d, d$State == state))$State
as.vector(head(subset.data.frame(d, d$State == state))$State)
as.vector(subset.data.frame(d, d$State == state)$State)
names(d)
source('C:/Repositories/rprogramming/best.R')
best("NY", "heart attack")
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
class(best("TX", "heart attack"))
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
class(best("TX", "heart attack"))
source('C:/Repositories/rprogramming/best.R')
class(best("TX", "heart attack"))
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
class(best("TX", "heart attack"))
source('C:/Repositories/rprogramming/best.R')
class(best("TX", "heart attack"))
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
?order
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")#
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")
source('C:/Repositories/rprogramming/best.R')
best("TX", "heart failure")
